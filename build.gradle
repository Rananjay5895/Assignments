plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.6.0"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-tomcat")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.h2database:h2")
    implementation("io.micronaut:micronaut-validation")
    testImplementation("org.mockito:mockito-core")
//    annotationProcessor("io.micronaut.data:micronaut-data-processor")
//    annotationProcessor("io.micronaut:micronaut-http-validation")
//    implementation("io.micronaut:micronaut-http-client")
//    implementation("io.micronaut:micronaut-jackson-databind")
//    implementation("jakarta.annotation:jakarta.annotation-api")
//   // implementation("io.micronaut.data:micronaut-data-jdbc")
//   // implementation("io.micronaut.sql:micronaut-hibernate-jpa")
//    implementation('io.micronaut.data:micronaut-data-hibernate-jpa:3.8.0')
////    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
//    implementation("io.micronaut:micronaut-validation")
//    runtimeOnly("ch.qos.logback:logback-classic")
//    runtimeOnly("com.h2database:h2")
//    implementation("io.micronaut:micronaut-validation")
//  //  runtimeOnly("mysql:mysql-connector-java")
//    runtimeOnly("io.micronaut.sql:micronaut-jdbc-tomcat")
//    implementation("io.micronaut:micronaut-runtime")

//    annotationProcessor("io.micronaut:micronaut-http-validation")
//    implementation("io.micronaut:micronaut-http-client")
//    implementation("io.micronaut:micronaut-jackson-databind")
//    implementation("io.micronaut:micronaut-runtime")
//    implementation("io.micronaut.liquibase:micronaut-liquibase")
//    implementation("jakarta.annotation:jakarta.annotation-api")
//    runtimeOnly("ch.qos.logback:logback-classic")
//    runtimeOnly("com.h2database:h2")
//    //testImplementation("org.assertj:assertj-core")
//    implementation("io.micronaut:micronaut-validation")
//    //testImplementation("org.mockito:mockito-core")
//    //testImplementation 'org.mockito:mockito-junit-jupiter:4.8.0'
//     annotationProcessor("io.micronaut.data:micronaut-data-processor:3.2.2")
////    implementation('io.micronaut.data:micronaut-data-hibernate-jpa:3.8.0')
//    runtimeOnly("io.micronaut.sql:micronaut-jdbc-tomcat")
//    //runtimeOnly("mysql:mysql-connector-java")
//    //testImplementation 'org.testcontainers:mariadb:1.17.3'
//    //runtimeOnly("org.mariadb.jdbc:mariadb-java-client")


}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}



